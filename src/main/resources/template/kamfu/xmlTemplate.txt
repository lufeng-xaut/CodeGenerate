<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="[(${clazzWrap.clazzName})]Mapper">
    <resultMap id="baseResultMap" type="[(${clazzWrap.clazzName})]">
        <id column="id" 					jdbcType="VARCHAR" property="id" />
		[# th:each="item : ${clazzWrap.fieldWrapList}"]			
		<result column="[(${item.columnName})]"		jdbcType="VARCHAR"		property="[(${item.fieldName})]" />
		[/]        
	</resultMap>

	<sql id="base_Column_List">
	[# th:each="item : ${clazzWrap.fieldWrapList}"]			
		[(${item.columnName})],
	[/]        
	</sql>

	<select id="get" parameterType="java.lang.String" resultMap="baseResultMap">
		select
		<include refid="base_Column_List" />
		from [[${clazzWrap.tableName}]]
		where id = #{id}
	</select>

	<delete id="delete" parameterType="java.lang.String">
		delete from [[${clazzWrap.tableName}]]
		where id = #{id}
	</delete>

	<insert id="add" parameterType="[(${clazzWrap.clazzName})]">
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            select UUID()
        </selectKey>
		insert into [[${clazzWrap.tableName}]]
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="base_Column_List" />
        </trim>
		values
		(
		[# th:each="item : ${clazzWrap.fieldWrapList}"]			
		#{[(${item.fieldName})]},
		[/]
		)
	</insert>

    <update id="edit" parameterType="[(${clazzWrap.clazzName})]">
        update [[${clazzWrap.tableName}]]
        <set>
		[# th:each="item : ${clazzWrap.fieldWrapList}"]						
			<if test="[(${item.fieldName})] != null">
				[(${item.columnName})] = #{[(${item.fieldName})]},
			</if>
		[/]            
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <!--批量新增 -->
    <insert id="batchAdd" parameterType="[(${clazzWrap.clazzName})]">
        insert into [[${clazzWrap.tableName}]]
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="base_Column_List" />
        </trim>
        values
        <foreach collection="list" separator="," index="index" item="po">
		(UUID(),
		[# th:each="item : ${clazzWrap.fieldWrapList}"]			
		#{po.[(${item.fieldName})]},
		[/]
		)
        </foreach>
    </insert>

    <!-- 批量删除 -->
    <delete id="batchDelete" parameterType="string">
        delete from [[${clazzWrap.tableName}]] where id in
        <foreach item="id" index="index" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 条件查询 -->
	<select id="findByCondition" parameterType="java.lang.String" resultMap="baseResultMap">
		select
		<include refid="base_Column_List" />
		from [[${clazzWrap.tableName}]]
		<where>
            1 = 1
        [# th:each="item : ${clazzWrap.fieldWrapList}"]
            <if test="queryBo.[(${item.fieldName})] != null">
            	AND [(${item.columnName})] = #{queryBo.[(${item.fieldName})]}
            </if>
        [/]
        </where>
	</select>

</mapper>